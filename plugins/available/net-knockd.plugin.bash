## \brief knockd port knocking daemon configurations. <div style="text-align: right"> group:**postnet** | runtype:**systemd** | deps: **-** | port: **-**</div><br/>
## \desc 
## [Knockd](http://www.zeroflux.org/projects/knock){:target="_blank"} is a port knocking daemon for enhanced network security through stealth port access.
# It provides automated installation, configuration management, and port knocking service control capabilities.
# Knockd enables secure remote access by requiring specific port knock sequences before opening firewall ports.
## 
## # Jangbi Configs
## ```bash title="/opt/jangbi/.config"
## RUN_NET_KNOCKD=1 # enable knockd port knocking
## ```
## # Check if running
## ```bash title="bash command"
## $ ps aux|grep knockd
## root      12345  0.0  0.1  12345  1234 ?        S    12:34   0:00 knockd -d -i eth0
## $ systemctl status knockd
## ‚óè knockd.service - Port-Knock Daemon
##    Active: active (running)
## ```
## # Current Configuration
## Current configuration is stored in `/etc/knockd.conf`. it is generated by `net-knockd configgen` command on install.
## You can edit it manually and not run install or configapply commands to keep current configurations.
## ```bash title="/etc/knockd.conf"
## --8<-- "./configs/knockd/knockd.conf"
## ```

# shellcheck shell=bash
cite about-plugin
about-plugin 'knockd install configurations.'

function net-knockd {
    about 'knockd install configurations'
    group 'postnet'
    runtype 'systemd'
    deps  ''
    param '1: command'
    param '2: params'
    example '$ net-knockd subcommand'
    local PKGNAME="knockd"
    local DMNNAME="net-knockd"
    BASH_IT_LOG_PREFIX="net-knockd: "
    # KNOCKD_PORTS="${KNOCKD_PORTS:-""}"
    if _check_config_reload; then
        _root_only || exit 1
        _distname_check || exit 1
    fi

    if [[ $# -eq 1 ]] && [[ "$1" = "help" ]]; then
        __net-knockd_help "$2"
    elif [[ $# -eq 1 ]] && [[ "$1" = "install" ]]; then
        __net-knockd_install "$2"
    elif [[ $# -eq 1 ]] && [[ "$1" = "uninstall" ]]; then
        __net-knockd_uninstall "$2"
    elif [[ $# -eq 1 ]] && [[ "$1" = "download" ]]; then
        __net-knockd_download "$2"
    elif [[ $# -eq 1 ]] && [[ "$1" = "disable" ]]; then
        __net-knockd_disable "$2"
    elif [[ $# -eq 1 ]] && [[ "$1" = "configgen" ]]; then
        __net-knockd_configgen "$2"
    elif [[ $# -eq 1 ]] && [[ "$1" = "configapply" ]]; then
        __net-knockd_configapply "$2"
    elif [[ $# -eq 1 ]] && [[ "$1" = "check" ]]; then
        __net-knockd_check "$2"
    elif [[ $# -eq 1 ]] && [[ "$1" = "run" ]]; then
        __net-knockd_run "$2"
    else
        __net-knockd_help
    fi
}

## \usage net-knockd help|install|uninstall|download|disable|configgen|configapply|check|run
## $ net-knockd install - install knockd port knocking daemon
## $ net-knockd uninstall - uninstall knockd
## $ net-knockd download - download knockd package files to pkg dir
## $ net-knockd disable - disable knockd plugin
## $ net-knockd configgen - generate knockd configuration files
## $ net-knockd configapply - apply knockd configuration files
## $ net-knockd check - check knockd plugin status
## $ net-knockd run - run knockd service
## $ net-knockd help - show this help message
function __net-knockd_help {
    echo -e "Usage: net-knockd [COMMAND]\n"
    echo -e "Helper to knockd install configurations.\n"
    echo -e "Commands:\n"
    echo "   help          Show this help message"
    echo "   install       Install knockd"
    echo "   uninstall     Uninstall installed knockd"
    echo "   download      Download pkg files to pkg dir"
    echo "   disable       Disable knockd service"
    echo "   configgen     Configs Generator"
    echo "   configapply   Apply Configs"
    echo "   check         Check vars available"
    echo "   run           Run tasks"
}

function __net-knockd_install {
    log_debug "Installing ${DMNNAME}..."
    export DEBIAN_FRONTEND=noninteractive
    if [[ ${INTERNET_AVAIL} -gt 0 ]]; then
        [[ $(find /etc/apt/sources.list.d|grep -c "extrepo_debian_official") -lt 1 ]] && extrepo enable debian_official
        [[ $(stat /var/lib/apt/lists -c "%X") -lt $(date -d "1 day ago" +%s) ]] && apt update -qy
        apt install -qy knockd
    else
        local filepat="./pkgs/${PKGNAME}*.deb"
        local pkglist="./pkgs/${PKGNAME}.pkgs"
        [[ $(find ${filepat}|wc -l) -lt 1 ]] && apt update -qy && __net-knockd_download
        pkgslist_down=()
        while read -r pkg; do
            [[ $pkg ]] && pkgslist_down+=("./pkgs/${pkg}*.deb")
        done < ${pkglist}
        # shellcheck disable=SC2068
        apt install -qy ${pkgslist_down[@]} || log_error "${DMNNAME} offline install failed."
    fi
    
    # mv /etc/knockd.conf /etc/knockd.old.conf 2>/dev/null
    # cp ./configs/knockd/knockd.conf.default /etc/knockd.conf
    # sed -i "s|7000,8000,9000|${KNOCKD_STATIC_SSH}|g" "/etc/knockd.conf"
    # chmod 600 /etc/knockd.conf

    # > step crypto otp generate --issuer dure.jangbi --account router_hostname --period=300 --length=10 --alg=SHA512 --qr dure.png > dure.totp
    # KNOCKD_WITH_STEPTOTP=1
    # KNOCKD_TOTPKEY="CIF3R2GPV6TLK4PJ3JZFLBMOCBYXSBP3"
    # apt install -qy ./pkgs/step-cli*.deb
    # https://smallstep.com/docs/step-cli/reference/
    # generate totp key
    # step crypto otp generate --issuer test.com --account test@test.com --period=600 --length=16 --alg=sha512 > smallstep.totp
    # show numbers
    # cat smallstep.totp  | xargs oathtool --totp --base32
    # verify totp
    # step crypto otp verify --secret smallstep.totp

    # cp knock_otp_regen.sh /sbin/knock_otp_regen.sh
    # chmod 600 /sbin/knock_otp_regen.sh
    # crontab -l > /tmp/mycron
    # echo "*/10 * * * * /sbin/knock_otp_regen.sh # KNOCKD" >> /tmp/mycron
    # crontab /tmp/mycron
    # rm /tmp/mycron

    if ! __net-knockd_configgen; then # if gen config is different do apply
        __net-knockd_configapply
        rm -rf /tmp/knockd
    fi
}

function __net-knockd_configgen { # config generator and diff
    log_debug "Generating config for ${DMNNAME}..."
    rm -rf /tmp/${PKGNAME} 1>/dev/null 2>&1
    mkdir -p /tmp/${PKGNAME} /etc/${PKGNAME} 1>/dev/null 2>&1
    cp ./configs/${PKGNAME}/* /tmp/${PKGNAME}/
    # diff check
    diff -Naur /etc/${PKGNAME} /tmp/${PKGNAME} > /tmp/${PKGNAME}.diff
    [[ $(stat -c %s /tmp/${PKGNAME}.diff) = 0 ]] && return 0 || return 1
}

function __net-knockd_configapply {
    [[ ! -f /tmp/${PKGNAME}.diff ]] && log_error "/tmp/${PKGNAME}.diff file doesnt exist. please run configgen."
    log_debug "Applying config ${DMNNAME}..."
    local dtnow=$(date +%Y%m%d_%H%M%S)
    [[ -d "/etc/${PKGNAME}" ]] && cp -rf "/etc/${PKGNAME}" "/etc/.${PKGNAME}.${dtnow}"
    pushd /etc/${PKGNAME} 1>/dev/null 2>&1
    patch -i /tmp/${PKGNAME}.diff
    popd 1>/dev/null 2>&1
    rm /tmp/${PKGNAME}.diff
    return 0
}

function __net-knockd_download {
    log_debug "Downloading ${DMNNAME}..."
    _download_apt_pkgs knockd
    return 0
}

function __net-knockd_uninstall { 
    log_debug "Uninstalling ${DMNNAME}..."
    # rm /sbin/knock_otp_regen.sh 2>/dev/null
    systemctl stop knockd
    systemctl disable knockd
}

function __net-knockd_disable {
    log_debug "Disabling ${DMNNAME}..."
    systemctl stop knockd
    systemctl disable knockd
    return 0
}

function __net-knockd_check { # running_status: 0 running, 1 installed, running_status 5 can install, running_status 10 can't install, 20 skip
    running_status=0
    log_debug "Checking ${DMNNAME}..."
    
    # check package file exists
    [[ $(find ./pkgs/${PKGNAME}*.pkgs|wc -l) -lt 1 ]] && \
        log_info "${PKGNAME} package file does not exist." && [[ $running_status -lt 15 ]] && running_status=15
    # check global variable
    [[ -z ${RUN_NET_KNOCKD} ]] && \
        log_error "RUN_NET_KNOCKD variable is not set." && [[ $running_status -lt 10 ]] && running_status=10
    [[ -z ${KNOCKD_STATIC_SSH} ]] && \
        log_error "KNOCKD_STATIC_SSH variable is not set." && [[ $running_status -lt 10 ]] && running_status=10
    [[ ${RUN_NET_KNOCKD} != 1 ]] && \
        log_error "RUN_NET_KNOCKD is not enabled." && __net-knockd_disable && [[ $running_status -lt 20 ]] && running_status=20
    # check package knockd
    [[ $(dpkg -l|awk '{print $2}'|grep -c "knockd") -lt 1 ]] && \
        log_info "knockd is not installed." && [[ $running_status -lt 5 ]] && running_status=5
    # check if running
    [[ $(systemctl status knockd 2>/dev/null|awk '{ print $2 }'|grep -c inactive) -lt 1 ]] && \
        log_info "knockd is running." && [[ $running_status -lt 1 ]] && running_status=1

    return 0
}

function __net-knockd_run {
    log_debug "Running ${DMNNAME}..."
    [[ ${RUN_NET_IPTABLES} -gt 0 ]] && \
        __net-iptables_nat_ext_both_allowedportinf "${KNOCKD_PORTS}" || log_debug "failed to set iptables rules for ${KNOCKD_PORTS}."

    systemctl restart knockd
    systemctl status knockd && return 0 || \
        log_error "knockd failed to run." && return 0
}

complete -F _blank net-knockd